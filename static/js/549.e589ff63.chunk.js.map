{"version":3,"file":"static/js/549.e589ff63.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","helpers/findDuplicates.js","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import {\n  Field as ContactInfo,\n  Form as FormWrapper,\n  ErrorMessage as Error,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormWrapper)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  border: 2px solid blue;\n  max-width: 320px;\n  padding: 12px;\n  background-color: cornsilk;\n`;\n\nexport const Field = styled(ContactInfo)`\n  max-width: 100%;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const ErrorMessage = styled(Error)`\n  color: red;\n  font-size: 12px;\n`;\n\nexport const Button = styled.button`\n  padding: 2px 4px;\n  background-color: blue;\n  color: white;\n  border: 2px solid black;\n  border-radius: 4px;\n  text-decoration: none;\n  max-width: 50%;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilters = state => state.filter;\n\nexport const selectfilteredContacts = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filter) => {\n    const filteredContacts = filter\n      ? contacts.filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : contacts;\n    return filteredContacts;\n  }\n);\n","import { Formik } from 'formik';\nimport { Form, Field, ErrorMessage, Button } from './ContactForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findDuplicates } from 'helpers/findDuplicates';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst phonePattern = /^\\d{3}-\\d{2}-\\d{2}$/;\nconst quizSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').trim().required('Required'),\n  number: Yup.string()\n    .matches(phonePattern, 'Enter the phone number in the format 222-22-22')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={quizSchema}\n      onSubmit={(values, actions) => {\n        if (!findDuplicates(contacts, values)) {\n          dispatch(addContact(values));\n        }\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <label htmlFor=\"name\">Name</label>\n        <Field id=\"name\" name=\"name\" placeholder=\"Jane\" />\n        <ErrorMessage name=\"name\" component=\"span\" />\n\n        <label htmlFor=\"number\">Number</label>\n        <Field id=\"number\" name=\"number\" placeholder=\"222-22-22\" />\n        <ErrorMessage name=\"number\" component=\"span\" />\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import toast from 'react-hot-toast';\n\nexport const findDuplicates = (contacts, newContact) => {\n  const isDuplicateName = contacts.some(\n    contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n  );\n\n  const isDuplicateNumber = contacts.some(\n    contact => contact.number === newContact.number\n  );\n\n  if (isDuplicateName) {\n    toast.error(`'${newContact.name}' is already in contacts.`);\n    return newContact;\n  }\n\n  if (isDuplicateNumber) {\n    toast.error(\n      `Number '${newContact.number}' is already saved under the name '${newContact.name}'`\n    );\n    return newContact;\n  }\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 18px;\n  margin-bottom: 18px;\n  font-size: 20px;\n  font-weight: 500;\n  align-items: center;\n`;\n\nexport const IconWrapper = styled.span`\n  display: inline-flex;\n  color: blue;\n`;\n\nexport const Button = styled.button`\nfont-size: 14px;\nborder-radius: 4px;\n  color: blue;\n  transition: background-color 0.3s ease, color 0.5s ease;\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: blue;\n    outline: none;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Item, Button, IconWrapper } from './ContactList.styled';\nimport { IoMdContact } from 'react-icons/io';\nimport {\n  selectError,\n  selectIsLoading,\n  selectfilteredContacts,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport toast from 'react-hot-toast';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filteredContacts = useSelector(selectfilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && !error && <div>Request in progress...</div>}\n      {error && toast.error('Something went wrong! Try to reload this page')}\n      <ul>\n        {filteredContacts.map(contact => {\n          const { id, name, number } = contact;\n\n          return (\n            <Item key={id}>\n              <IconWrapper>\n                <IoMdContact size=\"24\" />\n              </IconWrapper>\n              <p>\n                {name}: {number}\n              </p>\n              <Button onClick={() => dispatch(deleteContact(id))}>\n                Delete\n              </Button>\n            </Item>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FilterInput = styled.input`\n  font-size: 18px;\n  padding: 2px 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterInput, FilterWrapper } from './Filter.styled';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { selectFilters } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilters);\n  const dispatch = useDispatch();\n  return (\n    <FilterWrapper>\n      Find contacts by name\n      <FilterInput\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={event => dispatch(changeFilter(event.target.value))}\n      />\n    </FilterWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const PhoneFormWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactsList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { PhoneFormWrapper } from \"./ContactsPage.styled\";\n\nexport default function ContactPage() {\n  return (\n    <PhoneFormWrapper>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </PhoneFormWrapper>\n  );\n}\n"],"names":["Form","styled","FormWrapper","_templateObject","_taggedTemplateLiteral","Field","ContactInfo","_templateObject2","ErrorMessage","Error","_templateObject3","Button","_templateObject4","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilters","filter","selectfilteredContacts","createSelector","contact","name","toLowerCase","includes","quizSchema","Yup","shape","min","trim","required","number","matches","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","isDuplicateName","some","isDuplicateNumber","toast","concat","findDuplicates","addContact","resetForm","children","_jsxs","htmlFor","id","placeholder","component","type","Item","IconWrapper","ContactList","filteredContacts","useEffect","fetchContacts","_Fragment","map","IoMdContact","size","onClick","deleteContact","FilterWrapper","FilterInput","Filter","value","onChange","event","changeFilter","target","PhoneFormWrapper","ContactPage"],"sourceRoot":""}